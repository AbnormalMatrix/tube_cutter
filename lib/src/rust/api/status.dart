// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'gcode.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `StatusParser`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `clone`, `clone`, `cmp`, `eq`, `fmt`, `hash`, `parse`, `partial_cmp`

Future<MachineStatus> parseStatus({required String statusString}) =>
    RustLib.instance.api.crateApiStatusParseStatus(statusString: statusString);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MachineStatus>>
abstract class MachineStatus implements RustOpaqueInterface {
  MachineState get machineState;

  Pos2D get position;

  set machineState(MachineState machineState);

  set position(Pos2D position);

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<MachineStatus> newInstance() =>
      RustLib.instance.api.crateApiStatusMachineStatusNew();
}

enum MachineState {
  idle,
  run,
  hold,
  jog,
  alarm,
  door,
  check,
  home,
  sleep,
  tool,
}

enum Rule {
  number,
  mpos,
  state,
  status;

  static Future<void> allRules() =>
      RustLib.instance.api.crateApiStatusRuleAllRules();
}
