// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'cut.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `set_units_to_mm`
// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `DistUnit`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `eq`

Future<Pos2D> calculateEndPos({
  required Pos2D startPos,
  required double tubeWidth,
  required double cutAngle,
  required double overshootAmount,
  required bool cutRight,
}) => RustLib.instance.api.crateApiGcodeCalculateEndPos(
  startPos: startPos,
  tubeWidth: tubeWidth,
  cutAngle: cutAngle,
  overshootAmount: overshootAmount,
  cutRight: cutRight,
);

String jog({required double xDist, required double yDist}) =>
    RustLib.instance.api.crateApiGcodeJog(xDist: xDist, yDist: yDist);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Gcode>>
abstract class Gcode implements RustOpaqueInterface {
  Future<void> addCommand({required String gCommand});

  Future<void> addCommandComment({
    required String gCommand,
    required String gComment,
  });

  void addCut({required Cut tubeCut});

  String get gcodeString;

  set gcodeString(String gcodeString);

  Future<void> dwell({required double dwellTime});

  String getGcodeString();

  Future<void> home2D({required double feedrate});

  Future<void> moveXy({required Pos2D newPos, required double feedrate});

  factory Gcode() => RustLib.instance.api.crateApiGcodeGcodeNew();

  Future<void> setPlasmaEnabled({required bool enabled});

  Future<void> setPositioningMode({required PositioningMode positioningMode});

  Future<void> setZero();

  Future<void> writeToFile({required String filename});
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Pos2D>>
abstract class Pos2D implements RustOpaqueInterface {
  double get x;

  double get y;

  set x(double x);

  set y(double y);

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<Pos2D> newInstance({required double x, required double y}) =>
      RustLib.instance.api.crateApiGcodePos2DNew(x: x, y: y);

  Future<Pos2D> toScreenSpace({
    required double tubeWidth,
    required double scaleFactor,
  });
}

enum PositioningMode { absolute, relative }
